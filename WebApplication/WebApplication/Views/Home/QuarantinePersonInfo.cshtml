@using System.Globalization;
@model WebApplication.Models.QuarantineModel
@{
    ViewData["Title"] = "Карантин " + Model.Person.Name;
}
<script type="text/javascript">

         window.localStorage.setItem('Identity','@Model.DeviceId');

</script>
<script type="text/javascript">

        function addLocation( position, onResult, onError) {
            var xhr = window.XMLHttpRequest ? new XMLHttpRequest() : new ActiveXObject('Microsoft.XMLHTTP');
            xhr.open(
                'GET',
                '/Home/AddLocation?' +
                'lat=' + position.coords.latitude +
                '&lon=' + position.coords.longitude +
                '&radius=' + position.coords.accuracy);
            xhr.onreadystatechange = function () {
                if (xhr.status == 200)
                    onResult('Координаты успешно переданы');
                else
                    onError('Нет связи');
            }
            xhr.send();
        }

    ymaps.ready(init);
    var isShowCurrentLocation = true;
    var showAllObjectOnMap = false;
    function init() {
        var lat = @(Model.Person.Zona?.Lat.ToString(CultureInfo.InvariantCulture) ?? "55.76");
        var long =  @(Model.Person.Zona?.Lon.ToString(CultureInfo.InvariantCulture) ?? "37.64");
        var myMap = new ymaps.Map('MapLocationId', {
            center: [lat, long],
            zoom: 15
        }, {
            searchControlProvider: 'yandex#search'
        });

                var myZonaCircle = new ymaps.Circle([
                    [ lat,  long],
                        @(Model.Person.Zona?.Radius.ToString(CultureInfo.InvariantCulture) ?? "20000")
                    ], {
                       balloonContent: "Зона карантина (радиус @(Model.Person.Zona?.Radius.ToString(CultureInfo.InvariantCulture) ?? "20000") м)",
                        hintContent:  "Зона карантина (радиус @(Model.Person.Zona?.Radius.ToString(CultureInfo.InvariantCulture) ?? "20000") м)"
                    }, {
                        draggable: false,
                        fillColor: "#339933",
                        fillOpacity: 0.3,
                        strokeColor: "#FFFF00",
                        strokeOpacity: 0.3,
                        strokeWidth: 3
                    });
        myMap.geoObjects.
            add(myZonaCircle);

        setupControls(myMap, myZonaCircle);


        if (navigator.geolocation) {
            navigator.geolocation.getCurrentPosition(success );
        } else {
            alert("Нет доступа");
        }
        function success(position) {
                lat = position.coords.latitude;
                 long = position.coords.longitude;

                 addLocation(position, function (result) {
                     var errorLocation = document.getElementById("addLocationResult");
                     errorLocation.innerHTML = result;
                     errorLocation.className = "text-success";

                 }, function (result) {
                         var successLocation = document.getElementById("addLocationResult");
                         successLocation.getElementById("addLocationResult").innerHTML = result;
                         successLocation.className = "text-danger";
                 })

             //    myMap.geoObjects.removeAll();
                 // Выставляем масштаб карты чтобы были видны все группы.

                // Создаём макет содержимого.
                 var MyIconContentLayout = ymaps.templateLayoutFactory.createClass(
                     '<div style="color: #FFFFFF; font-weight: bold;">$[properties.iconContent]</div>'
                 );


                    myMap.geoObjects.remove(myLocationCircle);
                      var myLocationCircle = new ymaps.Circle([
                    [ lat, long],
                        position.coords.accuracy
                    ], {
                       balloonContent: "Текущее местоположение @Model.Person.Name",
                        hintContent: "@Model.Person.Name"
                    }, {
                        draggable: false,
                        fillColor: "#DB7093",
                        fillOpacity: 0.3,
                        strokeColor: "#990066",
                        strokeOpacity: 0.3,
                        strokeWidth: 5
                    });
                 myMap.geoObjects.
                add(myLocationCircle);
            if (isShowCurrentLocation && !showAllObjectOnMap)
                myMap.setBounds(myLocationCircle.geometry.getBounds());
            if (showAllObjectOnMap) myMap.setBounds(myMap.geoObjects.getBounds());

        }

    }


    function setupControls(map, zonaCircle) {
        map.controls.remove(btnZona);
        map.controls.remove(btnAll);
        var btnZona = new ymaps.control.Button('Зону карантина');
        var btnAll = new ymaps.control.Button('Все');
        // Создаем круг.

        btnZona.options.set('maxWidth', 200);
        btnAll.options.set('maxWidth', 50);

        btnAll.events.add(['select', 'deselect'], function (e) {
            if (!showAllObjectOnMap)
                map.setBounds(map.geoObjects.getBounds());
            showAllObjectOnMap = e.get('type') == 'select' ? true : false;

        });
        btnZona.events.add(['select', 'deselect'], function (e) {
            if (isShowCurrentLocation)
                map.setBounds(zonaCircle.geometry.getBounds());
            isShowCurrentLocation = e.get('type') == 'select' ? false : true;


        });
        map.controls.add(btnAll)
            .add(btnZona);
    }
</script>
<style>
    .fdb-block .fdb-box {
        padding: .5rem .5rem;
    }
</style>
<div class="col-12 col-sm-12 m-auto ml-md-12 col-md-12 col-lg-12">
    <div class="fdb-box">
        <div class="row justify-content-center">
            <div class="col-12 col-xl-12 text-left">
                <h1>@Model.Person.Name</h1>

                <dt class="col-sm-12">
                    <strong>Дата окончания</strong>
                </dt>
                <dd class="col-sm-12">
                    <strong class="text-danger">@Model.Person.QuarantineStopInfo</strong>
                </dd>
                <dt class="col-sm-12">
                    <strong>Состояние передачи координат</strong>
                </dt>
                <dd class="col-sm-12">
                    <strong id="addLocationResult" class="text-success">@Model.StateSendLocation </strong>
                </dd>
            </div>
        </div>
    </div>
</div>
<hr />
<div id="MapLocationId" style="width: 100%; height: 470px"></div>
